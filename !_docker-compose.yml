version: '3.9'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - wiki_api
      - s4log_api
    networks:
      - web_app
      - db
    volumes: 
      - /c/certbot:/var/certs
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /c/prog/transport_client/dist:/var/www/s4log
      - staticApi:/var/www/static
  
  s4log_api: 
    image: menyalin/server
    container_name: 's4log_api'
    restart: always
    ports:
      - "3333:3000"
    volumes:
      - staticApi:/var/www/static
    depends_on:
      - mongo
    networks: 
      - db
      - web_app
    environment:
      DB_URL: ${DB_URL}
      TOKEN_LIFETIME: ${TOKEN_LIFETIME}
      JWT_SECRET: ${JWT_SECRET}
      PORT: ${PORT}
      DADATA_API_KEY: ${DADATA_API_KEY}
      DADATA_SECRET_KEY: ${DADATA_SECRET_KEY}
      DEBUG: ${DEBUG}
      ORS_API_KEY: ${ORS_API_KEY}

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - localMongoStorage:/data/db
    networks:
      - db
  
  wiki_api:
    image: menyalin/wiki_server
    container_name: wiki_server
    restart: always
    ports:
      - "4040:4040"
    networks:
      - db
      - web_app
    depends_on:
      - mongo
    environment:
      PORT: "4040"
      MONGO_URL: "mongodb://mongo:27017/s4log_wiki"

  wiki_client:
    image: menyalin/wiki_client
    container_name: wiki_client
    restart: always
    ports:
      - "3000:3000"
    networks:
      - web_app
    depends_on:
      - wiki_api
    environment:
      PORT: "3000"  
      NEXT_PUBLIC_API_URL: "https://wiki.s4log.ru/api"

  
networks:
  web_app:
  db:    

volumes:
  localMongoStorage:
  static: 
  staticApi:
